{
    "contents" : "\n\nlibrary(ornitho)\nlibrary(rgdal)\nlibrary(maptools)\n\n\ntab <- read.ornitho(\"E:\\\\Ornitho\\\\data\\\\export_27102014_221710.txt\")\n\ntab_org <- tab\n\nplotOrnithoAltitude(x = tab, alt.max = 1000, alt.int = 50, alt.min = 0)\n\nplotOrnithoPheno(x = tab, time = \"decade\")\n\n\n\n\n\n# shapefiles in data-folder of ornitho packe schreiben #####################\nsetwd(\"E:\\\\Arbeit\\\\2014\\\\2014_HGON\\\\HGON_Brutvogel_Ornitho\\\\data\")\n\nfluesse <- readShapeLines(\"gewaesser.shp\") \nproj4string(fluesse) <- CRS(\"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\")\n\nsave(fluesse, file = \"E:/Ornitho/package_ornitho/ornitho/data/hessen_river.rda\")\n\n#### krempel f?r shapefile aufbereitung\n\nif (map != \"Hessen\") {  \t\n  \n  #map <- \"FD\"\n  shape <- paste(\"data/\",map,\".shp\", sep = \"\")\n  shape <- readShapePoly(shape) \n  proj4string(shape) <- CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\")\n  plot(shape, lwd = .1,bg = NA, border = \"black\")\n  rm(shape)\n  \n  fluesse <- paste(\"data/\",map,\"_fluesse.shp\", sep = \"\")\n  \n  if(sum(getinfo.shape(fluesse)[[5]]) != 0){\t\n    fluesse <- readShapeLines(fluesse)\n    proj4string(fluesse) <- CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\")\n    plot(fluesse, col =\"blue\",add = TRUE)\n    rm(fluesse)\n  } else {rm(fluesse)}\n  \n  seen <- paste(\"data/\",map,\"_seen.shp\", sep = \"\")\n  \n  if(sum(getinfo.shape(seen)[[5]]) != 0){\t\n    seen <- readShapePoly(seen)\n    proj4string(seen) <- CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\")\n    plot(seen, add = TRUE, col = \"blue\",bg = NA, lwd = 0.01)\n    rm(seen)\n  }else { rm(seen)}\n  \n}\n\nseen <- readShapePoly(\"data/stillgewaesser_Hessen_neu.shp\") \nproj4string(seen) <- CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\")\n\n#### orte hinzuf?gen\n# hessische Orte plotten\norte <- read.csv2(\"data/orte.csv\", as.is = TRUE)\norte$x <- as.numeric(orte$x)\norte$y <- as.numeric(orte$y)\n\norte <- SpatialPointsDataFrame(coords = orte[, c(\"x\", \"y\")],\n                               proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                               data = orte[, c(\"kenn_gro\",\n                                               \"kennzeichen\",\n                                               \"name\")])\norte <- spTransform(orte, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n\nif(map == \"Hessen\"){\n  \n  points(orte, col = \"red\", pch = 20, cex = 1)\n  \n  # Labes der Orte plotten\n  #\n  # f?r labels unter dem punkt\n  a <- subset(orte,kenn_gro == \"KB\"|kenn_gro == \"VB\"|kenn_gro == \"ESW\"|\n                kenn_gro == \"MTK\"|kenn_gro == \"LDK\"|kenn_gro == \"HR\"|\n                kenn_gro == \"DA\"|kenn_gro == \"MKK\")\n  text(a,labels = a$kenn_gro,pos = 1, cex = 1, font = 2)\n  \n  # f?r labels links neben dem punkt\n  a <- subset(orte,kenn_gro == \"HG\"|kenn_gro == \"FB\"|\n                kenn_gro == \"OF\"|kenn_gro == \"KS\"|kenn_gro == \"MR\")\n  text(a,labels = a$kenn_gro,pos = 2, cex = 1, font = 2)\n  \n  # f?r labels ?ber dem punkt\n  a <- subset(orte,kenn_gro == \"WI\"|kenn_gro == \"R?D\"|\n                kenn_gro == \"GG\"|kenn_gro == \"F\"|kenn_gro == \"ERB\"|\n                kenn_gro == \"LM\"|kenn_gro == \"HP\")\n  text(a,labels = a$kenn_gro,pos = 3, cex = 1, font = 2)\n  \n  # f?r labels rechts neben dem punkt\n  a <- subset(orte,kenn_gro == \"GI\"|kenn_gro == \"HEF\"|kenn_gro == \"FD\")\n  text(a,labels = a$kenn_gro,pos = 4, cex = 1, font = 2)\n  rm(orte)\n}  else {\n  \n  points(orte[match(map,orte$kenn_gro),],\n         col = \"red\", pch = 20, cex = 3)\n  rm(orte)\n}\n}\n\n###### krempel f?r klasse matchen in plotpoint function\nclasses <- read.csv2(\"data/classes.csv\")\nklasse <- classes$klasse[match(x$Art_deutsch[1],classes$art)]\n#x <- subset(x, geschuetzt == \"Nein\")\nx$Datum <- as.Date(x$Datum)\nnobs <- nrow(x)\n\n#---------------------------------------------------------------------------\nif (nobs < 40 | length(unique(x$Ort)) <= 4 | klasse == \"Seltenheit\") {\n  \n  a <- x\n  points(a, col = \"darkgreen\", pch = 21,cex = a$Anzahl_log, bg = \"darkgreen\")\n}\n\n#---------------------------------------------------------------------------\nif (klasse == \"Wintergast\"){\n  \n  a <- subset(x, Datum >= as.Date(\"2013-01-01\") & Datum <= as.Date(\"2013-06-30\"))\n  \n  if (nrow(a) == 0) {rm(a) } else {\n    \n    a <- SpatialPointsDataFrame(coords = a[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = a[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    a <- spTransform(a, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(a, col = \"darkgreen\", pch = 21, cex = a$Anzahl_log, bg = \"darkgreen\" )} # Erste H?lfte\n  \n  b <- subset(x, Datum <= as.Date(\"2013-12-31\") & Datum >= as.Date(\"2013-07-01\"))  # Zweite H?lfte\n  \n  if (nrow(b) == 0) {rm(b)} else {\n    \n    b <- SpatialPointsDataFrame(coords = b[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = b[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    b <- spTransform(b, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(b,col = \"#00F200BF\", pch = 21,cex = b$Anzahl_log, bg = \"#00F200BF\")} # zweite H?lfte\n  \n}\n\nif (klasse == \"Standvogel\") {\n  \n  a <- subset(x, Brutzeitcode == \"\") # ohne Brutzeitcode\n  if (nrow(a) == 0) {rm(a)}else{\n    a <- SpatialPointsDataFrame(coords = a[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = a[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    a <- spTransform(a, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(a, col = \"darkgreen\", pch = 21,cex = a$Anzahl_log, bg = \"darkgreen\")\n  }\n  b <- subset(x, Brutzeitcode != \"\")  # mit Brutzeitcode\n  if (nrow(b) == 0) {rm(b)} else {\n    \n    b <- SpatialPointsDataFrame(coords = b[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = b[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    b <- spTransform(b, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(b,col = \"#00F200BF\", pch = 21,cex = b$Anzahl_log, bg = \"#00F200BF\")\n  }}\n\nif (klasse == \"Durchz?gler\") {\n  \n  a <- subset(x, Datum >= as.Date(\"2013-02-16\") & Datum <= as.Date(\"2013-05-31\")) # Heimzug\n  if (nrow(a) == 0) { rm(a) } else {\n    a <- SpatialPointsDataFrame(coords = a[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = a[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    a <- spTransform(a, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(a, col = \"darkgreen\", pch = 21,cex = a$Anzahl_log, bg = \"darkgreen\")\n  }\n  \n  b <- subset(x, Datum >= as.Date(\"2013-06-01\") & Datum <= as.Date(\"2013-12-15\"))  # Wegzug\n  if (nrow(b) == 0) { rm(b) } else {\n    b <- SpatialPointsDataFrame(coords = b[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = b[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    b <- spTransform(b, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(b, col = \"#00F200BF\", pch = 21,cex = b$Anzahl_log, bg = \"#00F200BF\")\n  }  \t\n  \n  c <- subset(x, Datum < as.Date(\"2013-02-15\")|Datum > as.Date(\"2013-12-15\"))  # Winter\n  \n  if(nrow(c) == 0)\n  {\n    rm(c)\n    \n  } else {\t\t\n    c <- SpatialPointsDataFrame(coords = c[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = c[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    c <- spTransform(c, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    \n    points(c,col = \"#FFFF00B2\", pch = 21,cex = c$Anzahl_log, bg = \"#FFFF00B2\")\n  }\n}\nif (klasse == \"Teil- und Kurzstreckenzieher\"){\n  \n  a <- subset(x, Brutzeitcode == \"\") # ohne Brutzeitcode\n  if (nrow(a) == 0) { rm(a) } else {\n    a <- SpatialPointsDataFrame(coords = a[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = a[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    a <- spTransform(a, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(a, col = \"darkgreen\", pch = 21,cex = a$Anzahl_log, bg = \"darkgreen\")\n  }\n  \n  b <- subset(x, Brutzeitcode != \"\")  # mit Brutzeitcode\n  if (nrow(b) == 0) { rm(a) } else {\n    b <- SpatialPointsDataFrame(coords = b[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = b[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    b <- spTransform(b, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(b,col = \"#00F200BF\", pch = 21,cex = b$Anzahl_log, bg = \"#00F200BF\")}\n  \n  c <- subset(x, Datum < as.Date(\"2013-02-15\")| Datum > as.Date(\"2013-12-15\"))  # Winter\n  \n  if(nrow(c) == 0){rm(c)}else{\n    c <- SpatialPointsDataFrame(coords = c[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = c[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    c <- spTransform(c, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(c,col = \"#FFFF00B2\", pch = 21,cex = c$Anzahl_log, bg = \"#FFFF00B2\")}\n}\nif (klasse == \"Langstreckenzieher\"){\n  a <- subset(x, Brutzeitcode == \"\") # ohne Brutzeitcode\n  if(nrow(a) == 0){rm(a)}else{\n    a <- SpatialPointsDataFrame(coords = a[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = a[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    a <- spTransform(a, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(a, col = \"darkgreen\", pch = 21,cex = a$Anzahl_log, bg = \"darkgreen\")\n  }\n  \n  b <- subset(x, Brutzeitcode != \"\")  # mit Brutzeitcode\n  \n  if (nrow(b)==0) {rm(b)} else {\n    \n    b <- SpatialPointsDataFrame(coords = b[, c(\"x\", \"y\")],\n                                proj4string = CRS(\" +proj=longlat +ellps=WGS84\"),\n                                data = b[, c(\"Art_deutsch\",\"Anzahl_log\")])\n    b <- spTransform(b, CRS(\" +proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +datum=potsdam +units=m +no_defs\"))\n    points(b,col = \"#00F200BF\", pch = 21,cex = b$Anzahl_log, bg = \"#00F200BF\")\n  }\n}}}\n\n\n# reg ex string programmieren\n#sort(unique(gsub(\"([[:alpha:]]*)( )([(][[:alpha:]]*[)])\", \"\\\\1\", x$spec_name)))\n",
    "created" : 1427015408176.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3272521981",
    "id" : "96156982",
    "lastKnownWriteTime" : 1427021830,
    "path" : "E:/Ornitho/scripts/ornitho_auswertung_mit_package.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}